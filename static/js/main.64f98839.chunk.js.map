{"version":3,"sources":["index.js"],"names":["toList","filt","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","map","paper_json","index","list","push","note","key","href","toHTML","Form","val","this","refs","myinput","value","props","onFilterVal","type","ref","defaultValue","onKeyUp","_filterVal","bind","React","Component","Paper","_this","Object","_Users_makoto_hiramatsu_work_github_com_himkt_interest_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","_Users_makoto_hiramatsu_work_github_com_himkt_interest_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_makoto_hiramatsu_work_github_com_himkt_interest_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","state","data","query","toLowerCase","filter","paper","match","setState","_this2","fetch","then","response","text","records","records_array","r","split","columns","slice","dict","i","length","toJSON","handleFilterTextVal","ReactDOM","render","document","getElementById"],"mappings":"mOAUA,SAASA,EAAOC,GACZ,OACIC,EAAAC,EAAAC,cAAA,WACKH,EAAKI,IAAI,SAACC,EAAYC,GAAb,OAMtB,SAAgBD,EAAYC,GACxB,IAAIC,EAAO,GACXA,EAAKC,KAAKP,EAAAC,EAAAC,cAAA,qBAAaE,EAAU,KAAvB,MACVE,EAAKC,KAAKP,EAAAC,EAAAC,cAAA,iBAASE,EAAU,YAAkB,UAArC,IAAiDA,EAAU,KAA3D,MAENA,EAAWI,MACXF,EAAKC,KAAKP,EAAAC,EAAAC,cAAA,cAAME,EAAU,KAAhB,MAGd,OACIJ,EAAAC,EAAAC,cAAA,MAAIO,IAAKJ,GACLL,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGQ,KAAMN,EAAU,MAAWA,EAAU,QAC5CJ,EAAAC,EAAAC,cAAA,UAAKI,IAlB4BK,CAAOP,EAAYC,UA+C1DO,uLAEE,IAAMC,EAAMC,KAAKC,KAAKC,QAAQC,MAC9BH,KAAKI,MAAMC,YAAYN,oCAIvB,OACIb,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,SAAOkB,KAAK,OAAOC,IAAI,UACnBC,aAAa,GAAGC,QAAST,KAAKU,WAAWC,KAAKX,gBAV/CY,IAAMC,WAiBnBC,cACF,SAAAA,EAAYV,GAAO,IAAAW,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAhB,KAAAc,IACfC,EAAAC,OAAAE,EAAA,EAAAF,CAAAhB,KAAAgB,OAAAG,EAAA,EAAAH,CAAAF,GAAAM,KAAApB,KAAMI,KAEDiB,MAAQ,CACTC,KAAM,KACNrC,KAAM,MALK8B,mFAUCQ,GAChBA,EAAQA,EAAMC,cACd,IAAMvC,EAAOe,KAAKqB,MAAMC,KAAKG,OACzB,SAASC,GACL,OACIA,EAAK,MAAUF,cAAcG,MAAMJ,IACnCG,EAAK,WAAeF,cAAcG,MAAMJ,IACxCG,EAAK,KAASF,cAAcG,MAAMJ,IAElCG,EAAK,KAASC,MAAMJ,KAIhCvB,KAAK4B,SAAS,CAAC3C,KAAMA,gDAIL,IAAA4C,EAAA7B,KAChB8B,MArGI,oKAsGCC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAT,GAAI,OAvEtB,SAAgBY,GACZ,IAEIC,EAAgBD,EAAQ7C,IAFd,SAAC+C,GAAD,OAAOA,EAAEC,MAAM,QAGzBC,EAAUH,EAAc,GAQ5B,OAPaA,EAAcI,MAAM,GACRlD,IAAI,SAASqC,GAElC,IADA,IAAIc,EAAO,GACFC,EAAE,EAAGA,EAAEH,EAAQI,OAAQD,IAAKD,EAAKF,EAAQG,IAAMf,EAAMe,GAC9D,OAAOD,IASOG,CAqDarB,EAtDRe,MAAM,SAuDpBN,KAAK,SAAA9C,GAAI,OAAI4C,EAAKD,SAAS,CAAEN,KAAMrC,EAAMA,KAAMA,uCAKpD,OAAIe,KAAKqB,MAAMpC,KAEPC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACU,EAAD,CAAMO,YAAaL,KAAK4C,oBAAoBjC,KAAKX,QACjDd,EAAAC,EAAAC,cAAA,eAAOJ,EAAOgB,KAAKqB,MAAMpC,MAAzB,MAKDC,EAAAC,EAAAC,cAAA,gCA9CCwB,IAAMC,WAoD1BgC,IAASC,OAAO5D,EAAAC,EAAAC,cAAC0B,EAAD,MAAWiC,SAASC,eAAe","file":"static/js/main.64f98839.chunk.js","sourcesContent":["import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\n\n\nconst URL = 'https://docs.google.com/spreadsheets/d/e/' +\n    '2PACX-1vQ3TV9KzYftbwV0gtWRZpTjMz9PSGHDU25705dbazQ_jmCYasQeL1YKP3jfZFY2kZ7PMWCYAVjLVG8h/' +\n    'pub?gid=0&single=true&output=tsv'\n\n\nfunction toList(filt) {\n    return (\n        <div>\n            {filt.map((paper_json, index) => toHTML(paper_json, index))}\n        </div>\n    )\n}\n\n\nfunction toHTML(paper_json, index) {\n    let list = []\n    list.push(<li> added: {paper_json['date'] } </li>)\n    list.push(<li> in {paper_json['conference'] || 'Unknown'} {paper_json['year']} </li>)\n\n    if (paper_json.note) {\n        list.push(<li> {paper_json['note']} </li>)\n    }\n\n    return (\n        <ul key={index}>\n            <li><a href={paper_json['link']}>{paper_json['title']}</a></li>\n            <ul>{list}</ul>\n        </ul>\n    )\n}\n\n\nfunction toJSON(records) {\n    let f_split = (r) => r.split('\\t')\n\n    var records_array = records.map(f_split)\n    var columns = records_array[0]\n    var papers = records_array.slice(1,)\n    var papers_json = papers.map(function(paper) {\n        var dict = {}\n        for (var i=0; i<columns.length; i++) dict[columns[i]] = paper[i]\n        return dict\n    })\n\n    return papers_json\n}\n\n\nfunction parseTSV(response) {\n    var records = response.split('\\n')\n    var papers_json = toJSON(records)\n    return papers_json\n}\n\n\nclass Form extends React.Component {\n    _filterVal() {\n        const val = this.refs.myinput.value\n        this.props.onFilterVal(val)\n    }\n\n    render() {\n        return (\n            <div>\n                <input type=\"text\" ref=\"myinput\"\n                    defaultValue=\"\" onKeyUp={this._filterVal.bind(this)} />\n            </div>\n        )\n    }\n}\n\n\nclass Paper extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            data: null,\n            filt: null,\n        }\n    }\n\n\n    handleFilterTextVal(query) {\n        query = query.toLowerCase()\n        const filt = this.state.data.filter(\n            function(paper) {\n                return (\n                    paper['title'].toLowerCase().match(query) ||\n                    paper['conference'].toLowerCase().match(query) ||\n                    paper['note'].toLowerCase().match(query) ||\n                    // paper['link'].toLowerCase().match(query) ||\n                    paper['year'].match(query)\n                )\n            }\n        )\n        this.setState({filt: filt})\n    }\n\n\n    componentDidMount() {\n        fetch(URL)\n            .then(response => response.text())\n            .then(data => parseTSV(data))\n            .then(filt => this.setState({ data: filt, filt: filt }))\n    }\n\n\n    render() {\n        if (this.state.filt) {\n            return (\n                <div>\n                    <Form onFilterVal={this.handleFilterTextVal.bind(this)} />\n                    <div> {toList(this.state.filt)} </div>\n                </div>\n            )\n        }\n        else {\n            return <div>Loading...</div>\n        }\n    }\n}\n\n\nReactDOM.render(<Paper />, document.getElementById('root'))\n"],"sourceRoot":""}